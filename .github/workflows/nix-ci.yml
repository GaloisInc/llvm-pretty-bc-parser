name: llvm-pretty-bc-parser nix CI
on:
  push:
    branches:
      - 'master'
      - 'release-**'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    # This job builds the main package, via a number of GHC versions.  This is
    # the build that would be used by downstream packages using this as a
    # dependency.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: Add "ghc912" when version 9.12.3 is released in nixpkgs.  Earlier
        # versions are not supported due to a GHC bug
        # (https://gitlab.haskell.org/ghc/ghc/-/issues/25771).
        ghc-version: [ "ghc910", "ghc98", "ghc96", "ghc94" ]
        # When adding a new GHC version here, check the flake.nix at the top
        # level.  There is information there on what is needed to be done
        # to supported added new GHC versions.
    steps:
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-23.05
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: galois
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: build ${{ matrix.ghc-version }}
        shell: bash
        run: nix build -L github:${{ github.repository }}/${{ github.sha }}#llvm-pretty-bc-parser.${{ matrix.ghc-version }}

  build_old_GHC:
    # This job runs the builds on older versions of GHC, verifying legacy GHC
    # support/compatibility.
    #
    #  * ["legacy" v.s. "main" is primarily driven by the selection of an older
    #    version of nixpkgs that contains the older GHC compilers.]
    #
    # Note that GHC 9.0 is not tested.  There are some build problems with
    # llvm-pretty under GHC 9.0, but 9.0 was also known to produce invalid code,
    # so it's best avoided entirely.
    #
    # The only difference between this job and the job above is that this job
    # overrides the nixpkgs input on the last line below to a nixpkgs version
    # that supports the older GHC versions.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc-version: [ "ghc92", "ghc810" ]
    steps:
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-23.05
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: galois
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: build ${{ matrix.ghc-version }}
        shell: bash
        run: nix build -L \
             github:${{ github.repository }}/${{ github.sha }}#llvm-pretty-bc-parser.${{ matrix.ghc-version }} \
             --override-input nixpkgs github:nixos/nixpkgs/25.05

  tests:
    # This job runs the LLVM tests.  The builds above verify that the code can be
    # built with different versions of GHC.  However, the resulting code should
    # be able to parse and represent a the bitcode from a wide range of LLVM
    # versions.
    #
    # This job uses the top level flake.nix file to run the tests.  That flake
    # file will specify a range of LLVM versions to test this llvm parser and the
    # underlying llvm-pretty library against.
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-23.05
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: galois
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: test
        shell: bash
        run: nix build -L github:${{ github.repository }}/${{ github.sha }}#TESTS
