name: llvm-quick-fuzz
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        ghc: ["8.10.2"]
        llvm: [ "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-apple-darwin.tar.xz"
              , "https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.1/clang+llvm-10.0.1-x86_64-apple-darwin.tar.xz"
              , "https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang+llvm-9.0.1-x86_64-apple-darwin.tar.xz"
              , "https://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-apple-darwin.tar.xz"
              ]
    name: llvm-quick-fuzz - GHC v${{ matrix.ghc }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-haskell@v1
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}

      - uses: actions/cache@v2
        name: Cache cabal store
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.sha }}
          restore-keys: |
            cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-

      - shell: bash
        run: brew install csmith creduce

      - shell: bash
        name: Clone llvm-pretty
        run: git clone https://github.com/elliottt/llvm-pretty

      - shell: bash
        name: Install LLVM
        run: |
          curl -L ${{ matrix.llvm }} -o llvm.tar.xz
          tar xzf llvm.tar.xz
           mv clang+llvm-*-x86_64-apple-darwin llvm
           echo "$PWD/llvm/bin" >> $GITHUB_PATH

      - shell: bash
        name: Build
        run: cabal build -ffuzz llvm-disasm fuzz-llvm-disasm

      - shell: bash
        name: Copy binaries
        run: |
          cp $PWD/llvm/bin/clang $PWD/llvm/bin/clangy
          ls -Fl@ $(cabal exec -ffuzz which llvm-disasm)
          file $(cabal exec -ffuzz which llvm-disasm)
          xattr -lv $(cabal exec -ffuzz which llvm-disasm)

      - shell: bash
        name: Run fuzzing
        run: cabal exec -ffuzz fuzz-llvm-disasm -- -n 5 --junit-xml results.xml -o results --collapse -I /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include --clang-flags="-O -w" --clang-flags="-O -w -g" -c clangy
        env:
          CSMITH_PATH: "/usr/local/Cellar/csmith/2.3.0/include/csmith-2.3.0"
